Document File
-------------

An attempt to create a simple model layer that abstracts flat text files.

Text files look like the ones used by jekyll (see 
http://github.com/mojombo/jekyll). They consist of a preambel written in YAML
(also called YAML front matter), and some content in the format you prefer,
e.g. Textile. Example:

!!!document starts in the following line.
---
id: 1
title: The shizzle!
tags: [tag]
number_of_foos: 42
---

I like the flowers.
!!!document ends in the previous line.

Can be abstracted like this:

class MyDocument < DocumentFile::Base
end

MyDocument.documents_dir = './documents'

# You now have dynamic finders:
doc = MyDocument.find_by_title("The shizzle!")    # => returns the document
doc = MyDocument.find_by_number_of_foos(42)       # => returns the document
doc = MyDocument.find_by_file_name('foo.textile') # => returns the document

# You can list documents by Array attributes
docs = MyDocument.by_tags # => Returns {"tag" => [doc_1, doc2, ...], ...}

# You can access the attributes of single documents:
doc.title                    # => "The shizzle!"
doc.tags                     # => ["tag"]
doc.content                  # => "I like the flowers."
doc.filename                 # => returns the filename without extension
doc.file_name_with_extension # => does what it says
doc.file_extension           # => does what it says

# You can initialize single documents, too:
doc = MyDocument.new('./documents/document-file.textile')

# If any of the files change, you must manually reload them:
MyDocument.reload!
