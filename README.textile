h1. Document File

Document file is an object mapper for plain text documents. The documents look like the ones used in "jekyll":http://github.com/mojombo/jekyll. They consist of a preambel written in YAML (also called YAML front matter), and some content in the format you prefer, e.g. Textile. This enables you to write documents in your favorite editor and access the content and metadata in your Ruby scripts.


h2. Example

As an example let's assume we have a directory called "documents" containing the following files:

<pre><code>documents/
|-foo.textile
|-bar.textile
</code></pre>

Documents look somehow like this. The part between the @---@s is the YAML front matter. After the second @---@, there is one blank line, followed by the content of the file. All items in the YAML front matter and the content are accessible by Document File.

<pre><code>---
id: 1
title: The shizzle!
tags: [tag]
number_of_foos: 42
status: published
---

I like the flowers.
</code></pre>


In order to access the documents in the folder, you have to create a document class that inherits from @DocumentFile::Base@. Inside the class definition, you must set the @documents_dir@ class variable in order to tell Document File where to look for files. In our little example, we will do the following:

<pre><code>require 'document_file'
class MyDocument
  include DocumentFile
  self.documents_dir = './documents'
end
</code></pre>


h2. Available functionality

h3. Dynamic finders

<pre><code>doc = MyDocument.find_by_title("The shizzle!")    # => returns the document
doc = MyDocument.find_by_number_of_foos(42)       # => returns the document
doc = MyDocument.find_by_file_name("foo")         # => returns the document

docs = MyDocument.find_all_by_status("published") # => [doc_1, doc_2, ...]
docs = MyDocument.find_all_by_tag("tag")          # => [doc_1, doc_2, ...]
</code></pre>


h3. Listing documents by Array attributes

<pre><code>docs = MyDocument.by_tags
# => Returns {"tag" => [doc_1, doc_2, ...], "tag_2" => [doc_1, doc_3, ...],  ...}
</code></pre>


h3. Chaining

<pre><code>docs = MyDocument.find_all_by_status("published").by_tags
#   => Returns {"tag" => [doc_1, doc_2, ...], ...}
docs = MyDocument.find_all_by_status("published").find_all_by_tag("tag")
#   => Returns [doc_1, doc_2, ...]
</code></pre>


h3. Accessing the attributes of single documents

<pre><code>doc.title                    # => "The shizzle!"
doc.tags                     # => ["tag"]
doc.content                  # => "I like the flowers."
doc.file_name                # => "foo"
doc.file_name_with_extension # => "foo.textile"
doc.file_extension           # => ".textile"
</code></pre>

h3. Initializing single documents

This will even work without setting the @documents_dir@ class variable.

<pre><code>doc = MyDocument.new('./documents/document-file.textile')
</code></pre>

h3. Reloading

If any of the files change, you must manually reload them:
<pre><code>MyDocument.reload!
</code></pre>


h2. Author

Written by "Ralph von der Heyden":http://rvdh.de. Don't hesitate to contact me if you have any further questions.
Follow me on "Twitter":http://twitter.com/ralph!
